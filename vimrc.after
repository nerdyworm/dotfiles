" Dark backgrounds are the roxors or something
set background=dark
" Pretty Colors
" color jellybeans
" color moria
" colorscheme solarized
" color anotherdark
color zellner
" color xoria256

" Use ctrl + movement keys to move around windows
map <C-H> <C-W>h
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l

" Command-T for CommandT
"map <Leader>f :CommandT<CR>
"imap <Leader>f <Esc>:CommandT<CR>

"" Flush Command-T
"map <Leader>F :CommandTFlush<cr>

" CtrlP Fuzzy File Finder
map ,f :CtrlP<cr>
map ,F :ClearCtrlPCache<cr>

"let g:ctrlp_working_path_mode = 1


" JANUS:  OMG NO BINDING THINGS TO FIND THINGY! :(
nunmap <leader>fef
nunmap <leader>fc

" Files Types
"autocmd BufRead,BufNewFile *.erb set filetype=eruby.html5
"autocmd BufRead,BufNewFile *.hbs set filetype=mustache
autocmd BufRead,BufNewFile *.jbuilder set filetype=ruby

" Clojure Section
let vimclojure#WantNailgun = 1
let vimclojure#SplitPos = "bottom"
let vimclojure#SplitSize = 10

autocmd BufRead,BufNewFile *.clj nmap <C-c><C-c> <Plug>ClojureEvalFile
autocmd BufRead,BufNewFile *.clj nmap <C-x><C-x> <Plug>ClojureRunTests

" Ctags tags
set tags=tags;/

augroup AuNERDTreeCmd
autocmd AuNERDTreeCmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()
"autocmd BufEnter * call s:FkingSize()

function s:CloseIfOnlyNerdTreeLeft()
  if exists("t:NERDTreeBufName")
    if bufwinnr(t:NERDTreeBufName) != -1
      if winnr("$") == 1
        q
      endif
    endif
  endif
endfunction

function s:FkingSize(...)
  "if exists("t:NERDTreeBufName")
    "let crr = bufnr('%')
    "let nr = bufwinnr(t:NERDTreeBufName)
    "echo crr.' == '. nr
    "if crr != nr
      "exec 'vertical' . nr . 'res 31'
    "endif
  "endif
endfunction

" Don't underline links in html
highlight link htmlLink text

" Map ,t to script/test things
map ,t :w\|!script/test %<cr>

" Map ,w to script/wip
map ,w :w\|!script/wip<cr>

" CTags and Fun Stuff
map <Leader>RT :!ctags --extra=+f --exclude=.git --exclude=log -R * `bundle show rails`/../* <cr>
" Add this type definition to your vimrc
" or do
" coffeetags --vim-conf >> <PATH TO YOUR VIMRC>
" if you want your tags to include vars/objects do:
" coffeetags --vim-conf --include-vars
 let g:tagbar_type_coffee = {
  \ 'kinds' : [
  \   'f:functions',
  \   'o:object'
  \ ],
  \ 'kind2scope' : {
  \  'f' : 'object',
  \   'o' : 'object'
  \},
  \ 'sro' : ".",
  \ 'ctagsbin' : 'coffeetags',
  \ 'ctagsargs' : '--include-vars ',
  \}
